S = ['', 'jdk7/', 'leetcode/', 'lintcode/']
srcs = [ p + 'src/main/java/**/*.java' for p in S]
java_library(
  name = 'practise',
  srcs = glob(srcs),
  exported_deps = [
    '//lib:slf4j-simple',
    '//lib:slf4j-api'
  ],
  deps = [
    '//lib:annotations'
  ]
)

PKG = 'src/test/java/'
NEED_HAMCREST = [PKG + c for c in [
 'ParseBalancedParenthesesTests.java'
]]


t_srcs = [ p + 'src/test/java/**/*.java' for p in S]
TESTS = glob(t_srcs, excludes = NEED_HAMCREST)
for t in TESTS:
  n = t[t.index("src/test/java/") + len("src/test/java/") : -len(".java")].replace('/','.')
  java_test(
    name = n,
    srcs = [t],
    deps = [
      '//lib:truth',
      ':practise'
    ],
    vm_args = ['-Xmx256m', '-Dfile.encoding=UTF-8']
  )

for t in NEED_HAMCREST:
  n = t[len('src/test/java/'):-len('.java')].replace('/','.')
  java_test(
    name = n,
    srcs = [t],
    deps = [
      '//lib:hamcrest-core',
      '//lib:truth',
      ':practise'
    ],
    vm_args = ['-Xmx256m', '-Dfile.encoding=UTF-8']
  )