http://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/
https://help.ubuntu.com/community/SSH/OpenSSH/Keys
http://www.thegeekstuff.com/2008/11/3-steps-to-perform-ssh-login-without-password-using-ssh-keygen-ssh-copy-id/


The private key is kept on the computer you log in from,
while the public key is stored on the .ssh/authorized_keys file on all the computers you want to log in to.


--------------------------------------------1-----------------------------------------
ssh-keygen
## When prompted for a password, leave it blank


ssh-copy-id user@host
## or if your server uses custom port no:
ssh-copy-id "user@host -p 1234"

## or using


 ~/.ssh/authorized_keys
cat ~/.ssh/id_rsa.pub | ssh username@hostname 'cat >> .ssh/authorized_keys'

(This requires the folder .ssh
to be in the home directory on the targeted hostname, with the authorized_keys file
in it)
$ sudo chmod 700 .ssh && chmod 600 .ssh/authorized_keys
--------------------------------------------2 -----------------------------------------
To disable password authentication, look for the following line in your
sshd_config file:

#PasswordAuthentication yes
replace it with a line that looks like this:

PasswordAuthentication no
------------------------------------- 3  best one OpenSSH to OpenSSH--------------------------------
http://www.thegeekstuff.com/2008/06/perform-ssh-and-scp-without-entering-password-on-openssh/
By default the ssh-keygen on openSSH generates RSA key pair.

 Start the SSH Agent on local-host
 [local-host]$ ps -ef | grep ssh-agent

 Load the private key to the SSH agent on the local-host
 [local-host]$ ssh-add
 Enter passphrase for /home/jsmith/.ssh/id_rsa: <Enter your passphrase here>
 Identity added: /home/jsmith/.ssh/id_rsa (/home/jsmith/.ssh/id_rsa)


-------------------------------------3  OpenSSH to SSH2----------------------------------------------
http://www.thegeekstuff.com/2008/07/ssh-key-based-authentication-setup-from-openssh-to-ssh2/

On local-host that is running openSSH, convert the openSSH public key to SSH2 public key using
ssh-keygen
[local-host]$ ssh-keygen -e -f ~/.ssh/id_rsa.pub > ~/.ssh/id_rsa_ssh2.pub



-------------------------------------3  SSH2 to OpenSSH ----------------------------------------------
http://www.thegeekstuff.com/2008/10/perform-ssh-and-scp-without-password-from-ssh2-to-openssh/

On remote-host, convert SSH2 public key, which is copied from local host, to OpenSSH public key
This should be executed on the remote-host that is running OpenSSH as Only OpenSSH can convert
keys back and forth between OpenSSH and SSH2 format.
[remote-host]$ ssh-keygen -i -f ~/.ssh/id_dsa_1024_a.pub > ~/.ssh/id_dsa_1024_a_openssh.pub



Copy the converted OpenSSH public key from ~/.ssh/id_dsa_1024_a_openssh.pub file
to the  ~/.ssh/authorized_keys file



Setup proper permission on remote-host to .ssh directory
On the remote-host that is running openSSH, make sure to setup the following permission.
Without this, you will have all kinds of weird problems with ssh.
$ chmod 755 ~
$ chmod 755 ~/.ssh
$ chmod 644 ~/.ssh/authorized_keys



Perform ssh from local-host (SSH2) to remote-host (OpenSSH) to verify
whether the key based authentication works properly.
[local-host]$ [You are on local-host here]
[local-host]$ ssh -l jsmith remote-host
Host key not found from database.
Key fingerprint:
bitaz-navun-gogus-mptop-ljilk-qwlem-ftrtm-llmak-topok-zuiof-bnmix
You can get a public key's fingerprint by running
% ssh-keygen -F publickey.pub on the keyfile.
Are you sure you want to continue connecting (yes/no)? yes
Host key saved to /home/jsmith/.ssh2/hostkeys/key_22_remote-host.pub
host key for remote-host, accepted by jsmith Sun Oct 19 2008 15:06:42 -0700
Passphrase for key "/home/jsmith/.ssh2/id_dsa_2048_a" with comment "2048-bit
dsa, jsmith@local-host, Sun Oct 19 2008 14:49:42 -0700":[Enter password]
Last login: Sun Oct 19 14:01:48 2008 from 192.168.1.10
[remote-host]$ [You are on remote-host here]


------------------------------------ 3  SSH2 to SSH2----------------------------------------------
http://www.thegeekstuff.com/2008/06/comprehensive-guide-for-ssh2-key-based-authentication-setup/


By default the ssh-keygen2 generates DSA key pair. But RSA is better



[local-host]$ ssh-keygen
Generating 2048-bit dsa key pair
...
Passphrase :<Enter the passphrase>
Again      :
Private key saved to /home/jsmith/.ssh2/id_dsa_2048_b
Public key saved to /home/jsmith/.ssh2/id_dsa_2048_b.pub



Giver proper permission to the .ssh2 directory as
[local-host]$ chmod 755 ~/.ssh2/
[local-host]$ chmod 644 ~/.ssh2/id_dsa_2048_b.pub
[local-host]$ chmod 644 ~/.ssh2/authorization



On the local-host, add the private key to the SSH2 identification file
[local-host]$ cat /home/jsmith/.ssh2/identification
IdKey id_dsa_2048_b


Create authorization file on the remote-host
[remote-host]$ cat /home/jsmith/.ssh2/authorization
Key id_dsa_2048_b.pub


-------------------------------------------- -----------------------------------------
 Q: on macOS Sierra, how do I get ssh to stop asking me to type in the keychain password?
 A: Edit your ~/.ssh/config file
 and add the line:
   Host *    UseKeychain yes


-------------------------------------------- -----------------------------------------
How can I enable both password and public key authentication with OpenSSH
http://serverfault.com/questions/193198/how-can-i-enable-both-password-and-public-key-authentication-with-openssh
http://serverfault.com/questions/161699/how-can-i-increase-ssh-security-can-i-require-both-a-key-and-password

This is finally available as of OpenSSH 6.2 (released March 2013), using the
AuthenticationMethods configuration option.
For instance, you may add the following line to sshd_config to require both public-key and password authentication:

AuthenticationMethods publickey,password

When logging in, ssh and scp will first perform public-key authentication, and then prompt for a password:

$ ssh user@example.org
Authenticated with partial success.
user@example.org's password:


If you have a password on your private key file,
you will of course first be prompted for that. Example using PuTTY:

Using username "user".
Authenticating with public key "rsa-key-20131221-user"
Passphrase for key "rsa-key-20131221-user":
Further authentication required
user@example.org's password: